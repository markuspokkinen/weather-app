{"version":3,"sources":["weatherImage.js","oneday.js","fivedaydiv.js","forcastWeather.js","otherCurrentdata.js","currentWeather.js","App.js","serviceWorker.js","index.js"],"names":["weatherImage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","icon","nextprops","setState","animation","react_default","a","createElement","className","src","alt","Component","oneday","addtime","string","parseInt","split","getwindirec","deg","ind","min","max","forEach","element","index","list","data","_this2","map","key","dt_txt","weatherImage_weatherImage","weather","style","borderTop","Math","round","main","temp","temp_max","temp_min","humidity","wind","speed","fivedaydiv","getfivedays","weekdays","listelem","elem","date","Date","setDate","getDay","onClick","event","five","indexOf","target","innerText","callback","backgroundColor","borderRadius","id","bind","forcastWeather","getWeatherdata","fetch","lat","lon","then","response","json","res","alldays","oneElem","days","filter","v","i","daysArray","dayElement","listElement","includes","shift","daycallback","day","length","oneday_oneday","fivedaydiv_fivedaydiv","otherCurrentdata","pressure","currentWeather","name","otherCurrentdata_otherCurrentdata","App","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","currentWeather_currentWeather","forcastWeather_forcastWeather","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15eb79d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './weatherImage.css';\r\n\r\nexport default class weatherImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            icon: props.icon\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops) { this.setState({ icon: nextprops.icon }) }\r\n\r\n    render() {\r\n        var animation = \"nothing\";\r\n        switch (this.state.icon) {\r\n            case '01d':\r\n                animation = \"spinner\";\r\n                break;\r\n            case '01n':\r\n                animation = \"spinner\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (< img className={animation} src={\"https://openweathermap.org/img/w/\" + this.state.icon + \".png\"} alt=\"not loaded\" />)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport WeathIm from './weatherImage';\r\nimport './oneday.css'\r\n\r\nexport default class oneday extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: this.props.data\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextprops) { this.setState({ list: nextprops.data }) }\r\n\r\n    addtime = (string) => { return (parseInt(string.split(\":\")[0]) + 3) + \":\" + string.split(\":\")[1] + \":\" + string.split(\":\")[2] }\r\n\r\n    getwindirec = (deg) => {\r\n        var winddeg = [\r\n            { min: 348.75, max: 11.25 }, { min: 11.25, max: 33.75 }, { min: 33.75, max: 56.25 }, { min: 56.25, max: 78.75 },\r\n            { min: 78.75, max: 101.25 }, { min: 101.25, max: 123.75 }, { min: 123.75, max: 146.25 }, { min: 146.25, max: 168.75 },\r\n            { min: 168.75, max: 191.25 }, { min: 191.25, max: 213.75 }, { min: 213.75, max: 236.25 }, { min: 236.25, max: 258.75 },\r\n            { min: 258.75, max: 281.25 }, { min: 281.25, max: 303.75 }, { min: 303.75, max: 326.25 }, { min: 326.25, max: 348.75 }\r\n        ];\r\n        var winddir = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\r\n        var ind;\r\n        winddeg.forEach((element, index) => {\r\n            if (element.min < deg && element.max > deg) {\r\n                ind = index;\r\n            }\r\n        })\r\n        return winddir[ind] + \": \" + deg;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dayDiv\">\r\n                {this.state.list.map((element) =>\r\n                    <div className=\"onedayDiv\" key={\"one: \" + element.dt_txt}>\r\n                        <p>{this.addtime(element.dt_txt.split(\" \")[1])}</p>\r\n                        <WeathIm icon={element.weather[0].icon} />\r\n                        <p style={{ borderTop: \"dashed 1px black\" }}>Temp: </p>\r\n                        <p>{Math.round(element.main.temp)}&#8451;</p>\r\n                        <p>&#8593; {element.main.temp_max}&#8451; &#8595;{element.main.temp_min}&#8451;</p>\r\n                        <p style={{ borderTop: \"dashed 1px black\" }}>Humidity:</p>\r\n                        <p>{element.main.humidity}%</p>\r\n                        <p style={{ borderTop: \"dashed 1px black\" }}>Wind:</p>\r\n                        <p>{element.wind.speed} m/s</p>\r\n                        <p>{this.getwindirec(element.wind.deg)}&deg;</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './fivedaydiv.css';\r\n\r\nexport default class fivedaydiv extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: this.props.list,\r\n            five: this.getfivedays(this.props),\r\n            index: 0\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        this.setState({\r\n            list: nextprops.list,\r\n            five: this.getfivedays(nextprops),\r\n        })\r\n    }\r\n    getfivedays = (props) => {\r\n        var weekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return (props.list.map((listelem) => listelem.split(\"-\")[2])).map((elem) => {\r\n            var date = new Date();\r\n            date.setDate(parseInt(elem, 10));\r\n            return weekdays[date.getDay()];\r\n        });\r\n    }\r\n    onClick = (event) => {\r\n        var index = this.state.five.indexOf(event.target.innerText);\r\n        this.props.callback(index);\r\n        this.setState({\r\n            index: index\r\n        })\r\n    }\r\n    render() {\r\n        var style = { backgroundColor: \"rgba(0,0,0,0.2)\", borderRadius: \"5px\" }\r\n        return (\r\n            <div id=\"fivedaysdiv\">\r\n                {this.state.list.map((element, index) =>\r\n                    <div key={\"five[\" + index + \"]\"} className=\"fivedayOne\" onClick={this.onClick.bind(this)} style={this.state.index === index ? style : {}}>\r\n                        <p>{this.state.five[index]}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport OneDay from './oneday';\r\nimport './forecastWeather.css';\r\nimport FiveDays from './fivedaydiv';\r\n\r\nexport default class forcastWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            days: [],\r\n            daysArray: [],\r\n            index: 1\r\n        }\r\n        this.getWeatherdata(this.props);\r\n\r\n    }\r\n    componentWillReceiveProps(nextprops) { this.getWeatherdata(nextprops); }\r\n\r\n    getWeatherdata = (data) => {\r\n        fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\" + data.lat + \"&lon=\" + data.lon + \"&APPID=9592eb101cb5b0e09de21ab8f991d0c3&units=metric\")\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                var alldays = res.list.map((oneElem) => oneElem.dt_txt.split(\" \")[0]);\r\n                var days =(alldays.filter((v, i) => alldays.indexOf(v) === i));\r\n                var daysArray = days.map((dayElement) => res.list.filter((listElement) => listElement.dt_txt.includes(dayElement)));\r\n\r\n                days.shift();\r\n                this.setState({\r\n                    daysArray: daysArray,\r\n                    days: days\r\n                })\r\n\r\n            });\r\n    }\r\n    daycallback = (day) => { this.setState({ index: day + 1 }) }\r\n\r\n    render() {\r\n        if (this.state.daysArray.length > 0) {\r\n            return (\r\n                <div id=\"forcast-main\">\r\n                    <h2>Today</h2>\r\n                    <OneDay data={this.state.daysArray[0]} />\r\n                    <h2>Forecast</h2>\r\n                    <FiveDays list={this.state.days} callback={this.daycallback.bind(this)} />\r\n                    <OneDay data={this.state.daysArray[this.state.index]} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './otherCurrentdata.css'\r\n\r\nexport default class otherCurrentdata extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            main: this.props.main\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops) { this.setState({ main: nextprops.main }) }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"otherCurrentdata\">\r\n                <p>&#8593; {this.state.main.temp_max} &#8451; &#8595; {this.state.main.temp_min} &#8451;</p>\r\n                <p>humidity: {this.state.main.humidity}%</p>\r\n                <p>pressure: {this.state.main.pressure} hPa</p>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport CurWeathIm from './weatherImage';\r\nimport OtherCurData from './otherCurrentdata';\r\nimport './currentWeather.css'\r\n\r\nexport default class currentWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            weather: [{}],\r\n            main: {}\r\n        }\r\n        this.getWeatherdata(this.props);\r\n    }\r\n    componentWillReceiveProps(nextprops) { this.getWeatherdata(nextprops) }\r\n\r\n    getWeatherdata = (props) => {\r\n        fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + props.lat + \"&lon=\" + props.lon + \"&APPID=9592eb101cb5b0e09de21ab8f991d0c3&units=metric\")\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                //console.log(res);\r\n                this.setState({\r\n                    name: res.name,\r\n                    weather: res.weather,\r\n                    main: res.main\r\n                });\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"current-div\">\r\n                <h2> {this.state.name} </h2>\r\n                <h1>{Math.round(this.state.main.temp)} &#8451;</h1>\r\n                <CurWeathIm icon={this.state.weather[0].icon} />\r\n                <OtherCurData main={this.state.main} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Forecast from './forcastWeather';\r\nimport Current from './currentWeather';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lat: 0,\r\n            lon: 0,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (navigator.geolocation)\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                this.setState({\r\n                    lat: position.coords.latitude,\r\n                    lon: position.coords.longitude,\r\n                })\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"app\">\r\n                <Current lat={this.state.lat} lon={this.state.lon} />\r\n                <Forecast lat={this.state.lat} lon={this.state.lon} />\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}