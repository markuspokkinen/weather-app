{"version":3,"sources":["weatherImage.js","oneday.js","fivedaydiv.js","forcastWeather.js","currentWeather.js","App.js","serviceWorker.js","index.js"],"names":["weatherImage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","icon","nextprops","setState","animation","react_default","a","createElement","className","src","alt","Component","oneday","list","data","class","map","element","dt_txt","split","weatherImage_weatherImage","weather","Math","round","main","temp","temp_max","temp_min","wind","speed","deg","humidity","pressure","fivedaydiv","onClick","event","preventDefault","index","five","indexOf","target","innerText","console","log","callback","weekdays","bind","assertThisInitialized","_this2","days","elem","date","Date","setDate","parseInt","getDay","_this3","style","backgroundColor","borderBottom","id","forcastWeather","getWeatherdata","fetch","lat","lon","then","response","json","res","alldays","oneElem","filter","v","i","daysArray","length","x","includes","push","shift","daycallback","day","oneday_oneday","fivedaydiv_fivedaydiv","currentWeather","name","App","lati","longt","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","currentWeather_currentWeather","forcastWeather_forcastWeather","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c552f62c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './weatherImage.css';\r\n\r\nexport default class weatherImage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            icon: props.icon\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        if (this.state.icon !== nextprops.icon) {\r\n            this.setState({\r\n                icon: nextprops.icon\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var animation = \"nothing\";\r\n        switch (this.state.icon)\r\n\r\n        {\r\n            case '01d':\r\n                animation = \"spinner\";\r\n                break;\r\n            case '01n':\r\n                animation = \"spinner\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (< img className={animation} src={\"https://openweathermap.org/img/w/\" + this.state.icon + \".png\"} alt=\"not loaded\" />)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport WeathIm from './weatherImage';\r\nimport './oneday.css'\r\n\r\nexport default class oneday extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            \r\n        };\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        this.setState({\r\n            list: nextprops.data\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class = \"dayDiv\">\r\n                {this.state.list.map((element) =>\r\n                    <div className=\"onedayDiv\">\r\n                        <p>{element.dt_txt.split(\" \")[1]}</p>\r\n                        <WeathIm icon={element.weather[0].icon} />\r\n                        <p>{Math.round(element.main.temp)}&#8451;</p>\r\n                        <p>&#8593; {Math.round(element.main.temp_max)}&#8451; &#8595;{element.main.temp_min}&#8451;</p>\r\n                        <p>{element.wind.speed} m/s</p>\r\n                        <p>{element.wind.deg}&deg;</p>\r\n                        <p>{element.main.humidity}%</p>\r\n                        <p>{element.main.pressure} hPa</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './fivedaydiv.css';\r\n\r\nexport default class fivedaydiv extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            weekdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n            five: [],\r\n            index:0\r\n        }\r\n        this.onClick = this.onClick.bind(this);\r\n\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        var list = nextprops.list;\r\n        var tmp = list.map((elem) => elem.split(\"-\"));\r\n        var days = tmp.map((elem) => {\r\n\r\n            var date = new Date();\r\n            date.setDate(parseInt(elem[2],10));\r\n            return this.state.weekdays[date.getDay()];\r\n\r\n        })\r\n        this.setState({\r\n            list: list,\r\n            weekdays: this.state.weekdays,\r\n            five: days,\r\n        })\r\n    }\r\n    onClick = (event) => {\r\n        event.preventDefault();\r\n        var index = this.state.five.indexOf(event.target.innerText);\r\n        console.log(index)\r\n        this.props.callback(index)\r\n        this.setState({\r\n            list: this.state.list,\r\n            weekdays: this.state.weekdays,\r\n            five: this.state.five,\r\n            index: index\r\n        }, () => {\r\n                console.log(this.state);\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        var style = { backgroundColor: \"rgba(0,0,0,0.5)\",borderBottom:0 }\r\n        return (\r\n            <div id=\"fivedaysdiv\">\r\n                {this.state.list.map((element, index) =>\r\n                    <div className=\"fivedayOne\" onClick={this.onClick} style={this.state.index === index ? style: {} }>\r\n                        <p>{this.state.five[index]}</p>\r\n                    </div>\r\n                    )}\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport OneDay from './oneday';\r\nimport './forecastWeather.css';\r\nimport FiveDays from './fivedaydiv';\r\n\r\nexport default class forcastWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            days:[],\r\n            daysArray: [],\r\n            index: 1\r\n        }\r\n        this.getWeatherdata(this.props);\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        this.getWeatherdata(nextprops);\r\n    }\r\n    getWeatherdata = (data) =>{\r\n        fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\" + data.lat + \"&lon=\" + data.lon + \"&APPID=9592eb101cb5b0e09de21ab8f991d0c3&units=metric\")\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                var list = res.list;\r\n                //console.log(list);\r\n                var alldays = list.map((oneElem) => oneElem.dt_txt.split(\" \")[0]);\r\n                var days = alldays.filter((v, i) => alldays.indexOf(v) === i);\r\n                var daysArray = [];\r\n                //console.log(days);\r\n\r\n                for (var i = 0; i < days.length; i++) {\r\n                    var element = [];\r\n                    for (var x = 0; x < list.length; x++) {\r\n                        if (list[x].dt_txt.includes(days[i])) {\r\n                            element.push(list[x]);\r\n                        }\r\n                    }\r\n                    daysArray.push(element);\r\n                }\r\n                days.shift();\r\n                this.setState({\r\n                    list: res.list,\r\n                    daysArray: daysArray,\r\n                    days: days\r\n                })\r\n            });\r\n\r\n    }\r\n    daycallback = (day) => {\r\n        this.setState({\r\n            list: this.state.list,\r\n            daysArray: this.state.daysArray,\r\n            days: this.state.days,\r\n            index:day\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"forcast-main\">\r\n                <h2>Today</h2>\r\n                <OneDay data={this.state.daysArray[0]} />\r\n                <h2>Forecast</h2>\r\n                <FiveDays list={this.state.days} callback={this.daycallback.bind(this)} />\r\n                <OneDay data={this.state.daysArray[this.state.index]} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CurWeathIm from './weatherImage';\r\nimport './currentWeather.css'\r\n\r\nexport default class currentWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            weather: [{}],\r\n            main: {}\r\n        }\r\n        this.getWeatherdata(this.props);\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        this.getWeatherdata(nextprops);\r\n    }\r\n    getWeatherdata = (data) =>{\r\n        fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + data.lat + \"&lon=\" + data.lon + \"&APPID=9592eb101cb5b0e09de21ab8f991d0c3&units=metric\")\r\n            .then(response => response.json())\r\n            .then(res => {\r\n            this.setState({\r\n                name: res.name,\r\n                weather: res.weather,\r\n                main: res.main\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <div id=\"current-div\">\r\n                <h2> {this.state.name} </h2>\r\n                <h1>{Math.round(this.state.main.temp)} &#8451;</h1>\r\n                <CurWeathIm icon={this.state.weather[0].icon} />\r\n                <div id=\"otherCurrentdata\">\r\n                    <p>&#8593; {Math.round(this.state.main.temp_max)} &#8451; &#8595; {Math.round(this.state.main.temp_min)} &#8451;</p>\r\n                    <p>humidity: {this.state.main.humidity}%</p>\r\n                    <p>pressure: {this.state.main.pressure} hPa</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Forecast from './forcastWeather';\r\nimport Current from './currentWeather';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lati: 0,\r\n            longt: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (navigator.geolocation)\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                this.setState({\r\n                    lati: position.coords.latitude,\r\n                    longt: position.coords.longitude\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app\">\r\n                <Current lat={this.state.lati} lon={this.state.longt} />\r\n                {<Forecast lat={this.state.lati} lon={this.state.longt} />}\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}